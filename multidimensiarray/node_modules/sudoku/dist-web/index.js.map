{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n\n  shuffleArray(puzzle);\n\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n\n  return boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n\n    if (tuple.answer === null) {\n      return -1;\n    }\n\n    total += tuple.state.length;\n  }\n\n  return total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n\n  var tuple1 = solveboard(puzzle);\n\n  if (tuple1.answer === null) {\n    return -1;\n  }\n\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n\n  if (tuple2.answer != null) {\n    return -1;\n  }\n\n  return difficulty;\n}\n\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\n\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n\n  return {\n    state: [],\n    answer: null\n  };\n}\n\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n\n      return guess;\n    }\n  }\n}\n\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\n\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\n\nfunction axisfor(pos, axis) {\n  if (axis === 0) {\n    return Math.floor(pos / 9);\n  } else if (axis === 1) {\n    return pos % 9;\n  }\n\n  return Math.floor(pos / 27) * 3 + Math.floor(pos / 3) % 3;\n}\n\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n\n  return 511 ^ bits;\n}\n\nfunction listbits(bits) {\n  var list = [];\n\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n\n  return list;\n}\n\nfunction allowed(board, pos) {\n  var bits = 511;\n\n  for (var axis = 0; axis < 3; axis++) {\n    var x = axisfor(pos, axis);\n    bits = bits & axismissing(board, x, axis);\n  }\n\n  return bits;\n} // TODO: make sure callers utilize the return value correctly\n\n\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\n\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n\n  return board;\n}\n\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\n\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\n\n;\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};"],"names":[],"mappings":"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"}