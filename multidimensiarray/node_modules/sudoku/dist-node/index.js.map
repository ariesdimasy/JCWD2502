{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["// Sudoku Generator and Solver for node.js\n// Copyright (c) 2011 Blagovest Dachev.  All rights reserved.\n//\n// This is a port of David Bau's python  implementation:\n// http://davidbau.com/archives/2006/09/04/sudoku_generator.html\nfunction makepuzzle(board) {\n  var puzzle = [];\n  var deduced = Array(81).fill(null);\n  var order = [...Array(81).keys()];\n  shuffleArray(order);\n\n  for (var i = 0; i < order.length; i++) {\n    var pos = order[i];\n\n    if (deduced[pos] === null) {\n      puzzle.push({\n        pos: pos,\n        num: board[pos]\n      });\n      deduced[pos] = board[pos];\n      deduce(deduced);\n    }\n  }\n\n  shuffleArray(puzzle);\n\n  for (var i = puzzle.length - 1; i >= 0; i--) {\n    var e = puzzle[i];\n    removeElement(puzzle, i);\n    var rating = checkpuzzle(boardforentries(puzzle), board);\n\n    if (rating === -1) {\n      puzzle.push(e);\n    }\n  }\n\n  return boardforentries(puzzle);\n}\n\nfunction ratepuzzle(puzzle, samples) {\n  var total = 0;\n\n  for (var i = 0; i < samples; i++) {\n    var tuple = solveboard(puzzle);\n\n    if (tuple.answer === null) {\n      return -1;\n    }\n\n    total += tuple.state.length;\n  }\n\n  return total / samples;\n}\n\nfunction checkpuzzle(puzzle, board) {\n  if (board === undefined) {\n    board = null;\n  }\n\n  var tuple1 = solveboard(puzzle);\n\n  if (tuple1.answer === null) {\n    return -1;\n  }\n\n  if (board != null && !boardmatches(board, tuple1.answer)) {\n    return -1;\n  }\n\n  var difficulty = tuple1.state.length;\n  var tuple2 = solvenext(tuple1.state);\n\n  if (tuple2.answer != null) {\n    return -1;\n  }\n\n  return difficulty;\n}\n\nfunction solvepuzzle(board) {\n  return solveboard(board).answer;\n}\n\nfunction solveboard(original) {\n  var board = [].concat(original);\n  var guesses = deduce(board);\n\n  if (guesses === null) {\n    return {\n      state: [],\n      answer: board\n    };\n  }\n\n  var track = [{\n    guesses: guesses,\n    count: 0,\n    board: board\n  }];\n  return solvenext(track);\n}\n\nfunction solvenext(remembered) {\n  while (remembered.length > 0) {\n    var tuple1 = remembered.pop();\n\n    if (tuple1.count >= tuple1.guesses.length) {\n      continue;\n    }\n\n    remembered.push({\n      guesses: tuple1.guesses,\n      count: tuple1.count + 1,\n      board: tuple1.board\n    });\n    var workspace = [].concat(tuple1.board);\n    var tuple2 = tuple1.guesses[tuple1.count];\n    workspace[tuple2.pos] = tuple2.num;\n    var guesses = deduce(workspace);\n\n    if (guesses === null) {\n      return {\n        state: remembered,\n        answer: workspace\n      };\n    }\n\n    remembered.push({\n      guesses: guesses,\n      count: 0,\n      board: workspace\n    });\n  }\n\n  return {\n    state: [],\n    answer: null\n  };\n}\n\nfunction deduce(board) {\n  while (true) {\n    var stuck = true;\n    var guess = null;\n    var count = 0; // fill in any spots determined by direct conflicts\n\n    var tuple1 = figurebits(board);\n    var allowed = tuple1.allowed;\n    var needed = tuple1.needed;\n\n    for (var pos = 0; pos < 81; pos++) {\n      if (board[pos] === null) {\n        var numbers = listbits(allowed[pos]);\n\n        if (numbers.length === 0) {\n          return [];\n        } else if (numbers.length === 1) {\n          board[pos] = numbers[0];\n          stuck = false;\n        } else if (stuck) {\n          var t = numbers.map(function (val, key) {\n            return {\n              pos: pos,\n              num: val\n            };\n          });\n          var tuple2 = pickbetter(guess, count, t);\n          guess = tuple2.guess;\n          count = tuple2.count;\n        }\n      }\n    }\n\n    if (!stuck) {\n      var tuple3 = figurebits(board);\n      allowed = tuple3.allowed;\n      needed = tuple3.needed;\n    } // fill in any spots determined by elimination of other locations\n\n\n    for (var axis = 0; axis < 3; axis++) {\n      for (var x = 0; x < 9; x++) {\n        var numbers = listbits(needed[axis * 9 + x]);\n\n        for (var i = 0; i < numbers.length; i++) {\n          var n = numbers[i];\n          var bit = 1 << n;\n          var spots = [];\n\n          for (var y = 0; y < 9; y++) {\n            var pos = posfor(x, y, axis);\n\n            if (allowed[pos] & bit) {\n              spots.push(pos);\n            }\n          }\n\n          if (spots.length === 0) {\n            return [];\n          } else if (spots.length === 1) {\n            board[spots[0]] = n;\n            stuck = false;\n          } else if (stuck) {\n            var t = spots.map(function (val, key) {\n              return {\n                pos: val,\n                num: n\n              };\n            });\n            var tuple4 = pickbetter(guess, count, t);\n            guess = tuple4.guess;\n            count = tuple4.count;\n          }\n        }\n      }\n    }\n\n    if (stuck) {\n      if (guess != null) {\n        shuffleArray(guess);\n      }\n\n      return guess;\n    }\n  }\n}\n\nfunction figurebits(board) {\n  var needed = [];\n  var allowed = board.map(function (val, key) {\n    return val === null ? 511 : 0;\n  }, []);\n\n  for (var axis = 0; axis < 3; axis++) {\n    for (var x = 0; x < 9; x++) {\n      var bits = axismissing(board, x, axis);\n      needed.push(bits);\n\n      for (var y = 0; y < 9; y++) {\n        var pos = posfor(x, y, axis);\n        allowed[pos] = allowed[pos] & bits;\n      }\n    }\n  }\n\n  return {\n    allowed: allowed,\n    needed: needed\n  };\n}\n\nfunction posfor(x, y, axis) {\n  if (axis === undefined) {\n    axis = 0;\n  }\n\n  if (axis === 0) {\n    return x * 9 + y;\n  } else if (axis === 1) {\n    return y * 9 + x;\n  }\n\n  return [0, 3, 6, 27, 30, 33, 54, 57, 60][x] + [0, 1, 2, 9, 10, 11, 18, 19, 20][y];\n}\n\nfunction axisfor(pos, axis) {\n  if (axis === 0) {\n    return Math.floor(pos / 9);\n  } else if (axis === 1) {\n    return pos % 9;\n  }\n\n  return Math.floor(pos / 27) * 3 + Math.floor(pos / 3) % 3;\n}\n\nfunction axismissing(board, x, axis) {\n  var bits = 0;\n\n  for (var y = 0; y < 9; y++) {\n    var e = board[posfor(x, y, axis)];\n\n    if (e != null) {\n      bits |= 1 << e;\n    }\n  }\n\n  return 511 ^ bits;\n}\n\nfunction listbits(bits) {\n  var list = [];\n\n  for (var y = 0; y < 9; y++) {\n    if ((bits & 1 << y) != 0) {\n      list.push(y);\n    }\n  }\n\n  return list;\n}\n\nfunction allowed(board, pos) {\n  var bits = 511;\n\n  for (var axis = 0; axis < 3; axis++) {\n    var x = axisfor(pos, axis);\n    bits = bits & axismissing(board, x, axis);\n  }\n\n  return bits;\n} // TODO: make sure callers utilize the return value correctly\n\n\nfunction pickbetter(b, c, t) {\n  if (b === null || t.length < b.length) {\n    return {\n      guess: t,\n      count: 1\n    };\n  } else if (t.length > b.length) {\n    return {\n      guess: b,\n      count: c\n    };\n  } else if (randomInt(c) === 0) {\n    return {\n      guess: t,\n      count: c + 1\n    };\n  }\n\n  return {\n    guess: b,\n    count: c + 1\n  };\n}\n\nfunction boardforentries(entries) {\n  var board = Array(81).fill(null);\n\n  for (var i = 0; i < entries.length; i++) {\n    var item = entries[i];\n    var pos = item.pos;\n    var num = item.num;\n    board[pos] = num;\n  }\n\n  return board;\n}\n\nfunction boardmatches(b1, b2) {\n  for (var i = 0; i < 81; i++) {\n    if (b1[i] != b2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction randomInt(max) {\n  return Math.floor(Math.random() * (max + 1));\n}\n\nfunction shuffleArray(original) {\n  // Swap each element with another randomly selected one.\n  for (var i = 0; i < original.length; i++) {\n    var j = i;\n\n    while (j === i) {\n      j = Math.floor(Math.random() * original.length);\n    }\n\n    var contents = original[i];\n    original[i] = original[j];\n    original[j] = contents;\n  }\n}\n\nfunction removeElement(array, from, to) {\n  var rest = array.slice((to || from) + 1 || array.length);\n  array.length = from < 0 ? array.length + from : from;\n  return array.push.apply(array, rest);\n}\n\n;\nmodule.exports = {\n  makepuzzle: function () {\n    return makepuzzle(solvepuzzle(Array(81).fill(null)));\n  },\n  solvepuzzle: solvepuzzle,\n  ratepuzzle: ratepuzzle,\n  posfor: posfor\n};"],"names":["makepuzzle","board","puzzle","deduced","Array","fill","order","keys","shuffleArray","i","length","pos","push","num","deduce","e","removeElement","rating","checkpuzzle","boardforentries","ratepuzzle","samples","total","tuple","solveboard","answer","state","undefined","tuple1","boardmatches","difficulty","tuple2","solvenext","solvepuzzle","original","concat","guesses","track","count","remembered","pop","workspace","stuck","guess","figurebits","allowed","needed","numbers","listbits","t","map","val","key","pickbetter","tuple3","axis","x","n","bit","spots","y","posfor","tuple4","bits","axismissing","list","b","c","randomInt","entries","item","b1","b2","max","Math","floor","random","j","contents","array","from","to","rest","slice","apply","module","exports"],"mappings":"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"}